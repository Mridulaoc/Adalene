<!DOCTYPE html>
<html lang="en">
<%- include ("../layout/header.ejs") %>

    <body>
        <%- include ("../layout/navBarnew.ejs") %>
            <div class="container-fluid mb-5">
                <div class="container">
                    <h4>Account</h4>
                    <div class="d-flex gap-5 ">
                        <%- include ("../layout/profileSidebar.ejs") %>
                        <div class="col-8 border shadow rounded px-5 fs-6">
                            <h4 class="text-center" style="padding: 1.5rem 10rem;">Order Details</h4>
                            <p>Order Id : <%= order.orderId %>
                            </p>
                            <p>Order Date : <%= moment(order.orderDate).format('MMMM Do YYYY, h:mm:ss') %>
                            </p>
                            <p>Order Status: <%= order.status %>
                            </p>
                            <p>Shipping Address : <%= order.address %>
                            </p>
                            <p>Payment Method : <%= order.paymentMethod %>
                            </p>
                            <p>Wallet Amount Used : â‚¹<%= order.walletAmountUsed %>
                            </p>
                            <p>Coupon Discount: <%= order.discount %>
                            </p>
                            <button id="download-invoice" class="px-3 text-decoration-none fs-6 fw-bold  border rounded-2 bg-transparent "style="color: #BC4C2A;">Download Invoice</button>

                            <h4 class="text-center" style="padding: 1.5rem 10rem;">Products</h4>
                            <table class="table">
                                <tr>
                                    <th>Product Name</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                                <% order.products.forEach(item=>{%>
                                    <tr>
                                        <td class="d-flex flex-column py-5"><img src="/uploads/<%= item.product.prod_images[0]%>" height="50px" width="50px"><%= item.product.prod_name %></td>
                                        <td class="py-5">
                                            <%= (item.price).toFixed(2) %>
                                        </td>
                                        <td class="py-5">
                                            <%= item.quantity %>
                                        </td>
                                        <td class="py-5">
                                            <%= (item.price * item.quantity).toFixed(2) %>
                                        </td>
                                        <td class="py-5">
                                            <%= item.productStatus %>
                                        </td>
                                        <td class="py-5">
                                            <% if(item.productStatus==='Pending' ){%>
                                                <button
                                                    class="px-3 text-decoration-none fs-6 fw-bold  border rounded-2 bg-transparent "
                                                    style="color: #BC4C2A;"
                                                    onclick="cancelOrderItem('<%= order._id %>','<%= item.product._id %>')">CANCEL</button>
                                                <%} else if (order.status==='Delivered' ){ %>
                                                    <button
                                                        class="px-3 text-decoration-none fs-6 fw-bold  border rounded-2 bg-transparent "
                                                        style="color: #BC4C2A;"
                                                        onclick="returnOrderItem('<%= order._id %>','<%= item.product._id %>')">RETURN</button>
                                                    <%}%>
                                        </td>
                                    </tr>
                                    <%})%>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <%- include ("../layout/footerUser.ejs") %>

                <script>

                    document.getElementById('download-invoice').addEventListener('click', () => {
                        window.location.href = `/download-invoice/<%= order._id %>`;
                    });
                    async function cancelOrderItem(orderId, productId) {
                        const result = await Swal.fire({
                            title: 'Are you sure?',
                            text: 'Do you really want to cancel this item?',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, cancel it!',
                            cancelButtonText: 'No, keep it'
                        });

                        if (result.isConfirmed) {
                            await fetch('/cancel-order-item', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ orderId, productId })
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            text: 'Item cancelled successfully',
                                        }).then(() => {
                                            location.reload();
                                        })
                                    } else {

                                        Swal.fire({
                                            icon: 'Failure',
                                            text: 'Failed to cancel the item',
                                        })
                                    }
                                })
                                .catch(error => console.log(error));
                        }
                    }

                    async function returnOrderItem(orderId, productId) {
                        const { value: reason } = await Swal.fire({
                            title: 'Enter the reason for returning this item',
                            input: 'text',
                            inputPlaceholder: 'Enter reason',
                            showCancelButton: true,
                            confirmButtonText: 'Submit',
                            cancelButtonText: 'Cancel',
                        });

                        if (reason) {
                            await handleReturnItemRequest(orderId, productId, reason);
                        }
                    }

                    async function handleReturnItemRequest(orderId, productId, reason) {
                        try {
                            const response = await fetch('/return-order-item', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ orderId, productId, reason }),
                            });

                            const data = await response.json();

                            if (data.success) {
                                Swal.fire('Success', 'The item has been returned successfully.', 'success')
                                    .then(() => {
                                        location.reload();
                                    });
                            } else {
                                Swal.fire('Error', data.message || 'Failed to submit return request for the item.', 'error');
                            }
                        } catch (error) {
                            console.error('Error processing return item request:', error);
                            Swal.fire('Error', 'An error occurred while processing the return request.', 'error');
                        }
                    }



                </script>
    </body>

</html>