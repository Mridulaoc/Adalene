<!DOCTYPE html>
<html lang="en">
<%- include ("../layout/header.ejs") %>

    <body>
        <%- include ("../layout/navBarnew.ejs") %>

            <div class="container_fluid">
                <div class="container" style="margin-top: 5rem">
                    <p><a href="/" class="text-decoration-none text-black">Home</a>><%= products.prod_name %>
                    </p>
                    <div class="container my-5">
                        <div class="row align-items-start">
                            <div class="col-6 d-flex flex-column align-items-center" style="position: relative;">
                                <div style="position: absolute; right: 15%;" class="">
                                    <i class="fa-regular fa-heart fs-3" style="color: #bc4c2a; cursor: pointer;"
                                        id="addToWishlistBtn" data-product-id="<%= products._id %>"
                                        data-is-in-wishlist="<%= isInWishlist ? 'true' : 'false' %>"></i>
                                </div>
                                <div class="image-container" onmousemove="zoomIn(event)" onmouseleave="zoomOut()">
                                    <img src="\uploads\<%= products.prod_images[0] %>" alt="" id="mainImage">
                                    <img src="\uploads\<%= products.prod_images[0] %>" alt="" class='zoomed-image'>
                                </div>
                                <div id="thumbnailContainer" class="d-flex justify-content-center flex-wrap mt-3">
                                    <% products.prod_images.forEach((image, index)=> { %>
                                        <img src="\uploads\<%= image %>" alt="" class="thumbnail-image m-2"
                                            style="width: 80px; height: 80px; cursor: pointer;"
                                            onclick="changeImage('<%= image %>', this)">
                                        <% }) %>
                                </div>
                            </div>
                            <div class="col-6">
                                <h3>
                                    <%= products.prod_name %> (<%= products.prod_rating %> <i
                                                class="fa-solid fa-star fs-6" style="color: #FFD43B;"></i>)
                                </h3>
                                <% if(appliedOffer){ %>
                                    <p class="text-decoration-line-through">Original Price: ₹<%= products.prod_mrp %>
                                    </p>
                                    <p class="text-danger">Offer Price: ₹<%= discountedPrice.toFixed(2) %> (<%=
                                                appliedOffer.discount_percentage %>% off)</p>

                                    <%} else {%>
                                        <p>Price: ₹<%= products.prod_mrp %>
                                        </p>
                                        <%} %>


                                            <p>Size : <%= products.prod_size.size %>
                                            </p>
                                            <p>Colour : <%= products.prod_color.color_name %>
                                            </p>
                                            <p>
                                                <% if(products.prod_quantity>0 && products.prod_quantity<6){ %>
                                                        <p style="color:#BC4C2A;" class="fw-bold">Only <%=
                                                                products.prod_quantity %>
                                                                left !</p>
                                                        <%} else if(products.prod_quantity===0) { %>
                                                            <p class="fs-5 fw-bold"> OUT OF STOCK</p>
                                                            <%}%>
                                            </p>
                                            <p>PRODUCT INFO</p>
                                            <hr style="width:60%; height: 2px; color: #BC4C2A;">
                                            <p class="fs-5" style="width: 70%; margin-bottom: 2rem;">
                                                <%= products.prod_desc %>
                                            </p>
                                            <div class="d-flex align-items-center my-3">
                                                <button class="px-3 py-1 fw-bold border border-1"
                                                    style="background-color: #BC4C2A; color: white;border:none;"
                                                    onclick="decrementQuantity()">-</button>
                                                <input type="number" id="quantityInput" value="1" min="1"
                                                    max="<%= products.prod_quantity %>"
                                                    class="py-1 text-center border border-1"
                                                    style="border-left: none; border-right: none;outline: none; "
                                                    readonly>
                                                <button class="px-3 py-1 fw-bold border border-1 "
                                                    style="background-color: #BC4C2A; color: white;border:none;"
                                                    onclick="incrementQuantity()">+</button>
                                            </div>
                                            <span id="quantity-availablity" class="fs-5 my-3"></span>

                                            <div class="d-flex flex-column gap-3">
                                                <button class="px-5 py-3 fs-5 text-white fw-bold"
                                                    style="border: none;background-color: #BC4C2A;"
                                                    onclick="addToCart('<%= products._id %>')">ADD TO CART</button>

                                            </div>
                            </div>
                        </div>
                    </div>

                    <div class="container my-5 mx-5 d-flex flex-column justify-content-center align-items-center">
                        <h2 class="" style="color:#BC4C2A">Related Products</h2>
                        <div class="d-flex justify-content-between my-5 mx-5 gap-5">
                            <%if(relatedProducts.length> 0){
                                for(let i=0; i<relatedProducts.length; i++){ %>
                                    <a href="/products/<%= relatedProducts[i]._id %>" class="text-decoration-none"
                                        style="width: 22rem; height: 32rem;">
                                        <div class="card shadow" style="width: 18rem;">
                                            <img src="\uploads\<%= relatedProducts[i].prod_images[0] %>"
                                                class="card-img-top" alt="...">
                                            <div class="card-body d-flex flex-column align-items-center">
                                                <p class="fs-6">
                                                    <%= relatedProducts[i].prod_name %>
                                                </p>
                                                <p class="card-text fs-5">₹<%= relatedProducts[i].prod_price %>
                                                </p>

                                            </div>
                                        </div>
                                        <%}%>
                                            <%}else{%>

                                                Data not found

                                                <%}%>

                        </div>
                    </div>
                    </a>
                </div>
                <%- include ("../layout/footerUser.ejs") %>
                    <script>
                        function zoomIn(event) {
                            const imageContainer = event.currentTarget;
                            const zoomedImage = imageContainer.querySelector('.zoomed-image');
                            const rect = imageContainer.getBoundingClientRect();
                            const x = event.clientX - rect.left;
                            const y = event.clientY - rect.top;

                            zoomedImage.style.display = 'block';
                            zoomedImage.style.transform = `translate(-${x}px, -${y}px) scale(1.5)`;
                        }

                        function zoomOut() {
                            const zoomedImage = document.querySelector('.zoomed-image');
                            zoomedImage.style.display = 'none';
                        }


                        function changeImage(imageSrc, clickedThumbnail) {
                            const mainImage = document.getElementById('mainImage');
                            const zoomedImage = document.querySelector('.zoomed-image');

                            mainImage.src = `\\uploads\\${imageSrc}`;
                            zoomedImage.src = `\\uploads\\${imageSrc}`;

                            // Remove 'active' class from all thumbnails
                            const thumbnails = document.querySelectorAll('.thumbnail-image');
                            thumbnails.forEach(thumb => thumb.classList.remove('active-thumbnail'));

                            // Add 'active' class to clicked thumbnail
                            clickedThumbnail.classList.add('active-thumbnail');
                        }

                        // Call this function when the page loads to set the first image as active
                        window.onload = function () {
                            const firstThumbnail = document.querySelector('.thumbnail-image');
                            if (firstThumbnail) {
                                firstThumbnail.classList.add('active-thumbnail');
                            }
                        };

                        // functiions for increment decrement 

                        function incrementQuantity() {
                            let maxQuantityPerUser = 5;
                            const quantityInput = document.getElementById('quantityInput');
                            const maxValue = quantityInput.max;
                            console.log(maxValue)
                            let quantity = parseInt(quantityInput.value);
                            console.log(quantity)
                            let quantityAvailablity = document.getElementById('quantity-availablity');
                            if (quantity + 1 > maxValue) {
                                quantityAvailablity.innerText = `Only ${maxValue} stocks left `
                            } else if (quantity >= maxQuantityPerUser) {
                                quantityAvailablity.innerText = 'Maximum quantity per user exceeded'
                            } else {
                                quantityInput.value = quantity + 1;
                            }
                        }




                        function decrementQuantity() {
                            const quantityInput = document.getElementById('quantityInput');
                            let quantity = parseInt(quantityInput.value);
                            if (quantity > 1) {
                                quantityInput.value = quantity - 1;
                            }
                        }

                        // add to cart function 
                        async function addToCart(productId) {
                            const quantityInput = document.getElementById('quantityInput');
                            const quantity = quantityInput.value;
                            const maxValue = quantityInput.max;
                            console.log(maxValue)
                            const response = await fetch('/add-to-cart', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ productId, quantity, maxValue })
                            });

                            if (response.status === 401) {
                                const result = await response.json();
                                if (result.redirectUrl) {
                                    window.location.href = result.redirectUrl;
                                }
                                return;
                            }
                            const result = await response.json();
                            if (result.success) {
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'Product added to cart successfully!',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'Failed to add product to cart.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        }


                        // add to wishlist 
                        const wishlistIcon = document.getElementById('addToWishlistBtn');
                        let isInWishlist = wishlistIcon.dataset.isInWishlist === 'true';

                        function updateWishlistIcon() {
                            wishlistIcon.classList.toggle('fa-regular', !isInWishlist);
                            wishlistIcon.classList.toggle('fa-solid', isInWishlist);
                        }

                        updateWishlistIcon();

                        wishlistIcon.addEventListener('click', function () {
                            const productId = this.dataset.productId;
                            const endpoint = isInWishlist ? '/wishlist/remove' : '/wishlist/add';

                            fetch(endpoint, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ productId: productId })
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Network response was not ok');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    isInWishlist = !isInWishlist;
                                    updateWishlistIcon();
                                    Swal.fire({
                                        title: 'Success!',
                                        text: isInWishlist ? 'Product added to wishlist successfully!' : 'Product removed from wishlist successfully!',
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    });
                                })
                                .catch(error => {
                                    console.error('Error updating wishlist:', error);
                                    Swal.fire({
                                        title: 'Error!',
                                        text: isInWishlist ? 'Failed to remove product from wishlist.' : 'Failed to add product to wishlist.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                });
                        });



                    </script>




    </body>

</html>