<!DOCTYPE html>
<html lang="en">
<%- include ("../layout/header.ejs") %>

    <body class="d-flex flex-column min-vh-100">
        <%- include ("../layout/navbar.ejs") %>

            <div class="container-fluid py-5 px-0">
                <div class="container mb-5 ">
                    <h2>Your Cart</h2>
                    <div class="row d-flex">                        
                        <% if(cart.products.length > 0) { %>
                            <div class="col-12 col-md-8">
                                <% cart.products.forEach(item => { %>
                                    <div class="card ">
                                        <div class="card-body">
                                            <div class="d-flex align-items-center gap-3">
                                                <img src="/uploads/<%= item.product.prod_images[0] %>" alt="" height="100px" width="100px" class="img-fluid">
                                                <div>
                                                    <h5 class="card-title text-capitalize"><%= item.product.prod_name %></h5>
                                                    <p class="card-text"><strong>Color:</strong> <%= item.product.prod_color.color_name %></p>
                                                    <p class="card-text"><strong>Price:</strong> ₹<%= Math.round(item.price) %></p>
                                                    <p class="card-text"><strong>Total:</strong> ₹<%= Math.round(item.price * item.quantity) %></p>
                                                </div>
                                            </div>
                                            <div class="mt-3 d-flex align-items-center justify-content-between">
                                                <div class="d-flex align-items-center">
                                                    <button class="btn  px-2" onclick="updateQuantity('<%= item.product._id %>', 'decrement')" style="border:1px solid #BC4C2A;">-</button>
                                                    <input type="number" id="quantityInput-<%= item.product._id %>" value="<%= item.quantity %>" min="1" max="<%= item.product.prod_quantity %>" class="form-control text-center mx-2" readonly>
                                                    <button class="btn  px-2" onclick="updateQuantity('<%= item.product._id %>', 'increment')" style="border:1px solid #BC4C2A;">+</button>
                                                </div>
                                                <button class="btn " style="border:1px solid #BC4C2A;color: #BC4C2A;" onclick="removeItem('<%= item.product._id %>')">
                                                    <i class="fa-solid fa-trash-can" style="color: #BC4C2A;"></i> Remove
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                <%})%>
                            </div>
                            <div class="col-12  col-lg-4">
                                <div class="card mb-4">
                                    <div class="card-body">
                                        <table class="table  ">
                                            <tr class=" ">
                                                <td class="fs-5 py-3  px-3">Sub Total:</td>
                                                <td class="fs-5 py-3  px-3">₹<%= parseFloat(totalValue) %>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="fs-5 py-3 px-3">Shipping:</td>
                                                <% if (totalValue> 1000) {%>
                                                    <td class="fs-5 py-3  px-3">₹0</td>
                                                    <%} else {%>
                                                        <td class="fs-5 py-3  px-3">₹100</td>
                                                        <%}%>
                                            </tr>
                                            <tr>
                                                <td class="fs-5 py-3  px-3">Total:</td>
                                                <% if (totalValue> 1000) {%>
                                                    <td class="fs-5 py-3  px-3">₹<%= (parseFloat(totalValue) + 0) %>
                                                    </td>
                                                    <%} else {%>
                                                        <td class="fs-5 py-3  px-3">₹<%= (parseFloat(totalValue)+
                                                                100).toFixed(2) %>
                                                        </td>
                                                        <%}%>
    
                                            </tr>
                                        </table>
                                        <button
                                        class="px-3 text-decoration-none fs-5 fw-bold border rounded-2 bg-transparent "
                                        style="color: #BC4C2A;" onclick="window.location.href='/checkout'">CHECK
                                        OUT</button>
                                    </div>
                                </div>
                            </div>
                            <%} else { %>
                                Your cart is empty
                                <% } %>
                            </div>
                        </div>
                            </div>
                        </div>
                    </div>
                    <%- include ("../layout/footerUser.ejs") %>
                        <script>


                            function updateQuantity(productId, action) {
                                let maxQuantityPerUser = 5;
                                console.log(`quantityInput-${productId}`)
                                const quantityInput = document.getElementById(`quantityInput-${productId}`);
                                if (!quantityInput) {
                                    console.error(`No input field found for product ID: ${productId}`);
                                    return;
                                }
                                let quantity = parseInt(quantityInput.value);
                                const maxQuantity = parseInt(quantityInput.max);
                                console.log(maxQuantity)
                                let quantityAvailablity = document.getElementById(`quantity-availablity-${productId}`);

                                if (action === 'increment') {
                                    if (quantity + 1 > maxQuantity) {
                                        quantityAvailablity.innerText = `Only ${maxQuantity} left `
                                        setTimeout(() => { quantityAvailablity.innerText = ''; }, 2000);
                                    } else if (quantity >= maxQuantityPerUser) {
                                        quantityAvailablity.innerText = 'Maximum quantity per user exceeded'
                                        setTimeout(() => { quantityAvailablity.innerText = ''; }, 2000);
                                    } else {
                                        quantity = quantity + 1;
                                    }
                                } else if (action === 'decrement') {
                                    if (quantity > 1) {
                                        quantity -= 1;
                                    } else {
                                        quantity = 1;
                                    }
                                }

                                quantityInput.value = quantity;
                                console.log(quantityInput.value)

                                updateCart(productId, quantity)
                            }


                            async function updateCart(productId, quantity) {

                                try {
                                    const response = await fetch('/cart/update', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                            'Accept': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            productId: productId,
                                            quantity: quantity


                                        })
                                    });

                                    const data = await response.json();

                                    if (data.success) {
                                        location.reload();
                                    }
                                } catch (error) {
                                    console.error('Error updating cart:', error);
                                }
                            }


                            function removeItem(productId) {
                                Swal.fire({
                                    title: 'Are you sure?',
                                    text: "You won't be able to revert this!",
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Yes, remove it!'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        fetch('/cart/remove', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json',
                                                'Accept': 'application/json'
                                            },
                                            body: JSON.stringify({
                                                productId: productId
                                            })
                                        })
                                            .then(response => response.json())
                                            .then(data => {
                                                if (data.success) {
                                                    Swal.fire(
                                                        'Removed!',
                                                        'The product has been removed.',
                                                        'success'
                                                    ).then(() => {
                                                        location.reload();
                                                    });
                                                } else {
                                                    Swal.fire(
                                                        'Failed!',
                                                        'Failed to remove product.',
                                                        'error'
                                                    );
                                                }
                                            })
                                            .catch(error => {
                                                console.error('Error:', error);
                                                Swal.fire(
                                                    'Error!',
                                                    'An error occurred while removing the product.',
                                                    'error'
                                                );
                                            });
                                    }
                                });
                            }

                        </script>
    </body>

</html>